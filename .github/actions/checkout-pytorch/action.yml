name: Checkout PyTorch

description: Clean workspace and check out PyTorch

inputs:
  no-sudo:
    description: If set to any value, don't use sudo to clean the workspace
    required: false
  submodules:
    description: Works as stated in actions/checkout, but the default value is recursive
    required: false
    default: recursive
  needs-history-and-master:
    description: If history of this commit and master should be checked out.  Usually used because the job calls git merge-base
    required: false
  needs-viable-strict:
    description: If viable/strict should be checked out.  Usually used because the job queries for test stats
    required: false

runs:
  using: composite
  steps:
    - name: Clean workspace
      shell: bash
      env:
        NO_SUDO: ${{ inputs.no-sudo }}
      run: |
        echo "${GITHUB_WORKSPACE}"
        if [ -z "${NO_SUDO}" ]; then
          sudo rm -rf "${GITHUB_WORKSPACE}"
        else
          rm -rf "${GITHUB_WORKSPACE}"
        fi
        mkdir "${GITHUB_WORKSPACE}"

    - name: Checkout PyTorch
      uses: zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9
      with:
        ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
        # --depth=1 for speed, manually fetch history and other refs as necessary
        fetch-depth: 1
        submodules: ${{ inputs.submodules }}

    - name: Checkout the rest of history and master
      shell: bash
      if: ${{ inputs.needs-history-and-master == 'true' }}
      env:
        HASH: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.sha) || github.sha }}
      run: git fetch --no-tags --prune --no-recurse-submodules origin --unshallow "${HASH}" master

    - name: Checkout viable/strict
      shell: bash
      if: ${{ inputs.needs-viable-strict == 'true' }}
      run: git fetch --no-tags --prune --no-recurse-submodules origin viable/strict
